[{"D:\\Web_Loan_Accept_Prediction-main\\client\\src\\index.js":"1","D:\\Web_Loan_Accept_Prediction-main\\client\\src\\App.js":"2","D:\\Web_Loan_Accept_Prediction-main\\client\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1608131522000,"results":"4","hashOfConfig":"5"},{"size":9513,"mtime":1608231247759,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608131522000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"119prbu",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web_Loan_Accept_Prediction-main\\client\\src\\index.js",[],"D:\\Web_Loan_Accept_Prediction-main\\client\\src\\App.js",["15"],"import \"./App.css\";\nimport axios from 'axios'\nimport React , { useState } from 'react'\nimport styled from 'styled-components'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { headers } from \"axios/lib/defaults\";\n\n\nlet axiosDefaults = require(\"axios/lib/defaults\");\naxiosDefaults.baseURL = \"http://127.0.0.1:5000/\";\n\n\n\n\n// styled component\nconst ErrorsText = styled.div`\n  color : red;\n`\n\nfunction App() {\n  const [fname, setFName] = useState(null)\n  const [lname, setLName] = useState(null)\n  const [Gender, setGender] = useState(null)\n  const [Married, setMarried] = useState(null)\n  const [Dependents, setDependents] = useState(null)\n  const [Education, setEducation] = useState(null)\n  const [Self_Employed, setSelf_Employed] = useState(null)\n  const [ApplicantIncome, setApplicantIncome] = useState(null)\n  const [CoapplicantIncome, setCoapplicantIncome] = useState(null)\n  const [LoanAmount, setLoanAmount] = useState(null)\n  const [Loan_Amount_Term, setLoan_Amount_Term] = useState(null)\n  const [Credit_History, setCredit_History] = useState(null)\n  const [Property_Area, setProperty_Area] = useState(null)\n  const [Loan_Status, setLoan_Status] = useState(null)\n  const [errors, setErrors] = useState(null)\n  const [sendStatus, setSendStatus] = useState(true)\n  const [loading, setLoading] = useState(true)\n\n  if(loading === true && sendStatus === true) {\n    setTimeout(() => {\n      setLoading(false)\n    }, 2000)\n  }\n\n  let data = {\n    Gender : Gender,\n    Married : Married,\n    Dependents : Dependents,\n    Education : Education,\n    Self_Employed : Self_Employed,\n    ApplicantIncome : ApplicantIncome,\n    CoapplicantIncome : CoapplicantIncome,\n    LoanAmount : LoanAmount,\n    Loan_Amount_Term : Loan_Amount_Term,\n    Credit_History : Credit_History,\n    Property_Area : Property_Area\n  }\n\n  const handleValidation = () => {\n    if(!Gender || !Married || !Dependents || !Education || !Self_Employed || \n       !ApplicantIncome || !CoapplicantIncome || !LoanAmount || !Loan_Amount_Term ||\n       !Credit_History || !Property_Area) {\n         setErrors(\"Some Data Is Missing !\")\n         return false\n       }\n    return true\n  }\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(data)\n    if(handleValidation())\n    {\n      setErrors(null)\n      setSendStatus(true)\n      axios.post('/predict', data)\n      .then((res) => {\n        console.log(res.data)\n        setLoan_Status(res.data)\n      })\n      .catch((err) => {\n        console.log('no not get')\n      })\n    }\n  }\n\n  const handleBack = () => {\n    setSendStatus(false)\n    setGender(null)\n    setMarried(null)\n    setDependents(null)\n    setEducation(null)\n    setSelf_Employed(null)\n    setApplicantIncome(null)\n    setCoapplicantIncome(null)\n    setLoanAmount(null)\n    setLoan_Amount_Term(null)\n    setCredit_History(null)\n    setProperty_Area(null)\n    setLoan_Status(null)\n    setErrors(null)\n    setLoading(true)\n    setSendStatus(false)\n  }\n\n  \n  \n  \n\n\n  // STATE COMPONENT\n  let Form = (\n    \n    <div class=\"black\">\n      <div class=\"container\">\n      \n      <div class=\"card\">\n        \n        <form class=\"row\">\n          <div class=\"column-5\">\n          </div>\n          <div class=\"column-1\">\n              <label class=\"s\">First Name</label><br/>\n              <label class=\"s\">Gender</label><br/>\n              <label class=\"s\">Dependents</label><br/>\n              <label class=\"s\">Self_Employed</label><br/>\n              <label class=\"s\">CoapplicantIncome</label><br/>\n              <label class=\"s\">Loan_Amount_Term</label><br/>\n              <label class=\"s\">Credit_History</label><br/>\n          </div>\n          <div class=\"column-2\">\n              <label>:</label>\n              <input\n                type=\"text\"\n                id=\"fname\"\n                value={fname}\n                onChange={e => setFName(e.target.value)}\n                placeholder=\"First name..\"\n              /><br/>\n            <div class = \"gg\">\n            <label>:</label>\n              <select \n                \n                id=\"Gender\"\n                value={Gender}\n                onChange={e => setGender(e.target.value)}\n              >\n                <option value={null}>none</option>\n                <option value={1}>Male</option>\n                <option value={0}>Female</option>\n              </select><br/>\n            </div>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"Dependents\"\n              value={Dependents}\n              onChange={e => setDependents(e.target.value)}\n              placeholder=\"Dependents\"\n            /><br/>\n            <div class = \"hh\">\n              <label>:</label>\n              <select\n                id=\"Self_Employed\"\n                value={Self_Employed}\n                onChange={e => setSelf_Employed(e.target.value)}\n              >\n                <option value={null}>none</option>\n                <option value={1}>Yes</option>\n                <option value={0}>No</option>\n              </select><br/>\n            </div>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"CoapplicantIncome\"\n              value={CoapplicantIncome}\n              onChange={e => setCoapplicantIncome(e.target.value)}\n              placeholder=\"CoapplicantIncome\"\n            /><br/>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"Loan_Amount_Term\"\n              value={Loan_Amount_Term}\n              onChange={e => setLoan_Amount_Term(e.target.value)}\n              placeholder=\"Loan_Amount_Term\"\n            /><br/>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"Credit_History\"\n              value={Credit_History}\n              onChange={e => setCredit_History(e.target.value)}\n              placeholder=\"Credit_History\"\n            /><br/>\n          </div>\n          <div class=\"column-3\">\n              <label class=\"m\">Last Name</label><br/>\n              <label class=\"m\">Married</label><br/>\n              <label class=\"m\">Education</label><br/>\n              <label class=\"m\">ApplicantIncome</label><br/>\n              <label class=\"m\">LoanAmount</label><br/>\n              <label class=\"m\">Property_Area</label>\n          </div>\n          <div class=\"column-4\">\n              <label>:</label>\n              <input\n                type=\"text\"\n                id=\"lname\"\n                value={lname}\n                onChange={e => setLName(e.target.value)}\n                placeholder=\"Last name..\"\n              /><br/>\n            <div class = \"kk\">\n              <label>:</label>\n              <select\n                id=\"Married\"\n                value={Married}\n                onChange={e => setMarried(e.target.value)}\n              >\n                <option value={null}>none</option>\n                <option value={1}>Yes</option>\n                <option value={0}>No</option>\n              </select><br/>\n            </div>\n            <div class = \"cc\">\n              <label>:</label>\n              <select\n                id=\"Education\"\n                value={Education}\n                onChange={e => setEducation(e.target.value)}\n              >\n                <option value={null}>none</option>\n                <option value={1}>Graduate</option>\n                <option value={0}>Not Graduate</option>\n              </select><br/>\n            </div>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"ApplicantIncome\"\n              value={ApplicantIncome}\n              onChange={e => setApplicantIncome(e.target.value)}\n              placeholder=\"ApplicantIncome\"\n            /><br/>\n            <label>:</label>\n            <input\n              type=\"number\"\n              id=\"LoanAmount\"\n              value={LoanAmount}\n              onChange={e => setLoanAmount(e.target.value)}\n              placeholder=\"LoanAmount\"\n            /><br/>\n            <div class = \"ee\">\n              <label>:</label>\n              <select\n                id=\"Property_Area\"\n                value={Property_Area}\n                onChange={e => setProperty_Area(e.target.value)}\n              >\n                <option value={null}>none</option>\n                <option value={0}>Rural</option>\n                <option value={2}>Urban</option>\n                <option value={1}>Semiurban</option>\n              </select><br/>\n            </div>\n\n          </div>\n          \n            \n        </form>\n        <div><br/><br/><br/></div>\n        <div >\n            <input class=\"button button1\" onClick={handleSubmit} type=\"submit\" value=\"Submit\" />\n\n            {errors && \n              <ErrorsText>{errors}</ErrorsText>\n            }\n          </div>\n      </div>\n      </div>\n    </div>\n  )\n  \n\n  let Result = (\n    <div>\n      {loading===false ? \n      <div>\n        <div>{Loan_Status === 1 ? (<div>Congratulations! {fname} {lname} <br/> You Can Loan</div>) : (<div>Sorry {fname} {lname} <br/>You Can't Loan</div>)}</div>\n        <button class=\"button button1\" onClick={handleBack}>Go Back</button>\n      </div>\n      :\n        <div>\n          <ClipLoader\n            size={150}\n            color={\"#123abc\"}\n            loading={true}\n          />\n        </div>\n      }\n    </div>\n      \n  \n  )\n\n  return (\n    \n    \n    <div className=\"container text-center\" class=\"loading_wave\">\n      <h1 ><br/>Loan accept prediction</h1>\n      {sendStatus===false ? Form : Result}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web_Loan_Accept_Prediction-main\\client\\src\\reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":6,"column":10,"nodeType":"18","messageId":"19","endLine":6,"endColumn":17},"no-unused-vars","'headers' is defined but never used.","Identifier","unusedVar"]